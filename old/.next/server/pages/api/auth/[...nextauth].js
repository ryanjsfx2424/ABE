"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/discord":
/*!**********************************************!*\
  !*** external "next-auth/providers/discord" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/discord");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_discord__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/discord */ \"next-auth/providers/discord\");\n/* harmony import */ var next_auth_providers_discord__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_discord__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes\n//const scopes = ['identify', 'guilds'].join(' ')\nconst scopes = \"identify guilds\";\nconst devMode = true;\n// NOTE: it is NOT possible to get guild channels from Oauth2 -- has to be done from a bot.\nasync function avoidRateLimit() {\n    await sleep();\n}\nfunction sleep(ms = 1000) {\n    return new Promise((res)=>setTimeout(res, ms));\n}\nasync function getUserData(token) {\n    await avoidRateLimit();\n    const fetch_result = await fetch(\"https://discord.com/api/users/@me\", {\n        headers: {\n            authorization: `Bearer ${token}`\n        }\n    });\n    console.log(\"14 fetch_result: \", fetch_result);\n    const data = await fetch_result.json();\n    console.log(\"16 data: \", data);\n    return data;\n}\nasync function getGuildData(token) {\n    await avoidRateLimit();\n    const fetch_result = await fetch(\"https://discord.com/api/users/@me/guilds\", {\n        headers: {\n            authorization: `Bearer ${token}`\n        }\n    });\n    console.log(\"26 fetch_result: \", fetch_result);\n    const data = await fetch_result.json();\n    console.log(\"28 data: \", data);\n    return data;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()({\n    providers: [\n        next_auth_providers_discord__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.DISCORD_CLIENT_ID,\n            clientSecret: process.env.DISCORD_CLIENT_SECRET,\n            authorization: {\n                params: {\n                    scope: scopes\n                }\n            }\n        }), \n    ],\n    callbacks: {\n        async jwt ({ token , account  }) {\n            // Persist the OAuth access_token and or the user id to the token right after signin\n            if (account) {\n                token.accessToken = account.access_token;\n            }\n            return token;\n        },\n        async session ({ session , token  }) {\n            if (!devMode) {\n                session.accessToken = token.accessToken;\n                const userData = await getUserData(session.accessToken);\n                console.log(\"userData55: \", userData);\n                session.userData = userData;\n                const guildData = await getGuildData(session.accessToken);\n                console.log(\"guildData59: \", guildData);\n                session.guilds = guildData;\n            } else {\n                var adminPerm = 2147483647;\n                var adminPermNew = \"4398046511103\";\n                var manageServerPerm = 104189537;\n                var manageServerPermNew = \"1071698529889\";\n                var session = {\n                    accessToken: \"j8Mm24UkJdZpN34rS3euoNLkC774YT\",\n                    expires: \"2022-11-05T08:58:07.626Z\",\n                    user: {\n                        image: \"https://cdn.discordapp.com/embed/avatars/2.png\",\n                        name: \"JeremyBearimy\"\n                    },\n                    userData: {\n                        discriminator: \"2207\",\n                        id: \"904305352990933003\",\n                        username: \"JeremyBearimy\"\n                    },\n                    guilds: {\n                        0: {\n                            icon: \"719eedf706beb3fd201de80499edd278\",\n                            id: \"789032594456576001\",\n                            name: \"interactions.py\",\n                            owner: true,\n                            permissions: 104713921,\n                            permissions_new: \"968619839169\"\n                        },\n                        1: {\n                            icon: \"084dd12134f3c21b9a82acbb814b1fe8\",\n                            id: \"931482273440751638\",\n                            name: \"ToTheMoonsNFT\",\n                            owner: false,\n                            permissions: manageServerPerm,\n                            permissions_new: manageServerPermNew\n                        },\n                        2: {\n                            icon: \"9832210ac7bd13033037b865b1622c68\",\n                            id: \"993961827799158925\",\n                            name: \"Roo Tech\",\n                            owner: true,\n                            permissions: 104189504,\n                            permissions_new: \"1071698529856\"\n                        }\n                    }\n                };\n            }\n            session.guildsArr = Object.values(session.guilds).filter((guild)=>true) //(guild.owner || guild.permissions & 0x8 || guild.permissions & 0x20)))\n            ;\n            session.guildIdToNameMap = {};\n            for(var ii = 0; ii < session.guildsArr.length; ii++){\n                session.guildIdToNameMap[session.guildsArr[ii].id] = session.guildsArr[ii].name;\n            }\n            return session;\n        }\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/[...nextauth].js"));
module.exports = __webpack_exports__;

})();